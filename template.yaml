AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-lambda-java-spring-sample-products-catalog

Globals:
  Function:
    Tracing: Active
    CodeUri: products-catalog-lambda-codebase/target/products-catalog-lambda-codebase-1.0.0-SNAPSHOT-aws.jar
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    Runtime: java21
    Timeout: 30
    MemorySize: 256

Resources:
  ProductsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Name: Products Catalog API

  CreateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: createProductFunction
      Policies:
        - DynamoDBReadPolicy:
            TableName: products
        - DynamoDBWritePolicy:
            TableName: products
      Events:
        ListProducts:
          Type: Api
          Properties:
            RestApiId: !Ref ProductsApi
            Path: /products
            Method: post

  GetProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: getProductFunction
      Policies:
        - DynamoDBReadPolicy:
            TableName: products
      Events:
        ListProducts:
          Type: Api
          Properties:
            RestApiId: !Ref ProductsApi
            Path: /products/{productId}
            Method: get

  ListProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: listProductsFunction
      Policies:
        - DynamoDBReadPolicy:
            TableName: products
      Events:
        ListProducts:
          Type: Api
          Properties:
            RestApiId: !Ref ProductsApi
            Path: /products
            Method: get

  UpdateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: updateProductFunction
      Policies:
        - DynamoDBReadPolicy:
            TableName: products
        - DynamoDBWritePolicy:
            TableName: products
      Events:
        ListProducts:
          Type: Api
          Properties:
            RestApiId: !Ref ProductsApi
            Path: /products/{productId}
            Method: put

  DeleteProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: deleteProductFunction
      Policies:
        - DynamoDBCrudPolicy:
            TableName: products
      Events:
        ListProducts:
          Type: Api
          Properties:
            RestApiId: !Ref ProductsApi
            Path: /products/{productId}
            Method: delete

  ProductsDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: "PAY_PER_REQUEST"
      OnDemandThroughput:
        MaxReadRequestUnits: 5
        MaxWriteRequestUnits: 5
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      TableName: "products"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Products API"
    Value: !Sub "https://${ProductsApi}.execute-api.${AWS::Region}.amazonaws.com/"
